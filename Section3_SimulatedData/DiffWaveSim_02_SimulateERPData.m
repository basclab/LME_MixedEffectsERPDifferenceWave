% Difference Wave Simulation Script: 2. Simulate ERP Data

% This script simulates trial-level ERP data for two emotion conditions
% (condition A/Neutral and condition B/Happy) for subsequent analysis of 
% Happy-minus-Neutral difference waves. Simulated subjects are assigned to
% a low/high maternal sensitivity group and a younger/older age group. 
% Two helper functions are used: simulateOneSample_forDiffWave, simulateOneSubject_ForDiffWave

% The number of simulated datasets (samples), subjects per sample, decay rate, 
% random seed, lead field, electrode montage, electrodes of interest, dipole location
% and orientation, and real noise files are specified in this current 
% script. Other simulation parameters (e.g., number of simulated trials, 
% mean amplitude for each emotion condition) are specified in the helper
% functions. Missing data are not simulated until DiffWaveSim_04_ExtractModelOutput.R.

% ***See Section3_SimulatedData README.md available on the LME_MixedEffectsERPDifferenceWave
% GitHub for pipeline details: https://github.com/basclab/LME_MixedEffectsERPDifferenceWave/tree/main/Section3_SimulatedData

% Requirements:    
    % - Needs MATLAB R2019a, EEGLAB v 2019_0, ERPLAB v 8.01, SEREEGA v 1.1.0
        % - For more information on EEGLAB, see: Delorme, A. & Makeig, S. (2004).
        %   EEGLAB: An open source toolbox for analysis of single-trial EEG dynamics
        %   including independent component analysis. https://sccn.ucsd.edu/eeglab/index.php
        % - For more information on ERPLAB, see: Lopez-Calderon, J., & Luck, S. J.
        %   (2014). ERPLAB: An open-source toolbox for the analysis of event-related
        %   potentials. https://erpinfo.org/erplab/    
        % - For more information on SEREEGA, see: Krol, L. R., Pawlitzki, J., Lotte, F.,
        %   Gramann, K., & Zander, T. O. (2018). SEREEGA: Simulating event-related EEG
        %   activity. https://github.com/lrkrol/SEREEGA
    % - Pediatric Head Atlas release v 1.1, Atlas 1 (0-2 years old) files
        % - Atlas files should be requested and downloaded from: https://www.pedeheadmod.net/pediatric-head-atlases/
        % - The folder containing the atlas files should then be added
        %   to the MATLAB path (via "Home" > "Set Path" > "Add with Subfolders"). 
    % - Filepath to the following folders:
        % - saveFolder: Folder for saving simulated data output files.
        %   This parent folder has two subfolders: 01_NCMeanAmpOutput_PreMerge
        %   and 01_SubjectDataLog, which are used for saving the corresponding
        %   mean amplitude output files and subject data logs (see Outputs
        %   section below). 
        % - noiseFolder: Folder containing the trial-level real noise
        %   waveforms saved as .erp files. See Appendix A in Heise et al.
        %   (submitted) for more information.
    % - Variables used to specify data simulation parameters: sampleN,
    %   sampleStart, subjectN, decayRate, and other variables listed below.
    % - Requires parallel computing toolbox (if not available, set M = 1)
    % - (Specified in simulateOneSubject_forDiffWave function) Filepath to 
    %   the following file used during processing: 
        % - binDescriptorFilename: File specifying each bin's number, label, 
        %   and 5-digit event markers. This file is created by the
        %   DiffWaveSim_01_CreateBinDescriptorFile.m script. 
          
% Script Functions:
    % 1. Define simulation parameters
    % 2. Simulate data with helper functions
    
% Outputs:
    % - NOTE: All output files are generated and saved in the
    %   simulateOneSample_forDiffWave function.   
    % - Mean amplitude .txt files with one mean amplitude value per bin/
    %   electrode/subject. There is one file for each simulated sample.
    %   Each file contains the following columns:
        % - value: The mean amplitude for this simulated subject’s specified
        %   bin and electrode. This value is extracted from C4 (corresponding 
        %   to E104 of the EGI HydroCel GSN 128-electrode montage) over a 
        %   300-500 ms time window. 
        % - chindex: The electrode number (e.g., electrode #1 corresponds to 
        %   E104 in this simulation).
        % - chlabel: The label for this electrode (e.g., E104).
        % - bini: A number generated by ERPLAB when concatenating ERP
        %   data files across each sample's subjects. NOTE: This number
        %   is NOT used for subsequent processing. 
        % - binlabel: A label composed of [SUBJECTID]_:_[trial-specific bin label].
        %   The trial-specific bin label corresponds to the labels from the
        %   bin descriptor file (created in DiffWaveSim_01_CreateBinDescriptorFile.m).
        %   The binlabel column is used to identify subject ID and stimuli-related  
        %   information in DiffWaveSim_03_OrganizeDataFiles.R. 
        % - ERPset: This column is intentionally empty because it is NOT needed 
        %   for identifying subject ID (see binlabel column above). 
    % - Subject data log .txt files with one row corresponding to each subject.
    %   There is one file for each simulated sample. Each file contains the 
    %   following columns:
        % - SUBJECTID: Simulated subject ID (e.g., 01, 02, …).
        % - mSens_age: String composed of a subject's assigned [maternal sensitivity group]_[age group]
        %   (e.g., lowMSens_youngerAgeGroup). 
    % - (Optional) .erp files containing the trial-level waveforms for all
    %   subjects in a sample. There is one file for each simulated sample
    %   and they are saved directly in the saveFolder specified above (not
    %   in a subfolder). These files are useful for visualizing waveforms
    %   or troubleshooting. 

% Copyright 2024 Megan J. Heise, Serena K. Mon, Lindsay C. Bowman
% Brain and Social Cognition Lab, University of California Davis, Davis, CA, USA.

% Permission is hereby granted, free of charge, to any person obtaining a 
% copy of this software and associated documentation files (the "Software"),
% to deal in the Software without restriction, including without limitation
% the rights to use, copy, modify, merge, publish, distribute, sublicense, 
% and/or sell copies of the Software, and to permit persons to whom the
% Software is furnished to do so, subject to the following conditions:

% The above copyright notice and this permission notice shall be included 
% in all copies or substantial portions of the Software.

% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.

%% DATA ENVIRONMENT
tic % Used to keep track of simulation duration

% Specify folder location for saving output files. This parent folder has
% two subfolders (01_MeanAmpOutput_PreMerge and 01_SubjectDataLog; see Outputs
% section above).
saveFolder = 'C:\Users\basclab\Desktop\Section3_SimulatedData';

%% 1. DEFINE SIMULATION PARAMETERS

sampleN = 1000; % Number of simulated samples

% Sample ID for first simulated sample (e.g., sample #1). This variable is 
% used when multiple computers are running separate simulations (e.g., computer
% 1 simulates samples #1-500 and computer 2 simulates samples #501-750). 
sampleStart = 1; 

% Number of simulated subjects per sample. In this simulation, this variable is
% divisible by 4 so that there are an equal number of subjects in the low/high
% maternal sensitivity and the younger/older age groups (see simulateOneSample_forDiffWave
% function for more information).
subjectN = 48; 

% Data is simulated with either a 'different' or 'same' decay rate across
% emotion conditions (see simulateOneSubject_forDiffWave.m for more
% information).
decayRate = 'different';

% Set seed for reproducible results
randSeed = 20230414;

%% 2. SIMULATE DATA WITH HELPER FUNCTIONS

[ALLEEG EEG CURRENTSET ALLCOM] = eeglab; % Initialize EEGLAB

% Define the following simulation parameters with the SEREEGA lf_generate_frompha
% function:
% - Lead field: Pediatric Head Atlas release v 1.1, Atlas 1 (0-2 years old)
% - Electrode montage: EGI HydroCel GSN 128-electrode montage
% - Electrodes of interest: C4 (corresponding to E104 of the HydroCel GSN
%   montage). An additional electrode (C3, corresponding to E36) was also
%   simulated because the SEREEGA toolbox required simulating 2+ electrodes.
leadField   = lf_generate_frompha('0to2','128','labels',{'E36','E104'});

% Identify the nearest source location to the prefrontal ICA component
% cluster reported in Reynolds and Richards (2005) with MNI coordinates
% of x = 10, y = 46, z = 18
sourceLocs  = lf_get_source_nearest(leadField, [10 46 18]);

% Specify a dipole orientation approximated from the projection
% pattern of the Reynolds and Richards (2005) prefrontal source
leadField.orientation(sourceLocs,:) = [0.57 -0.70 -0.01];

% Load real infant noise files to combine with simulated ERP waveforms
noiseFolder = 'C:\Users\basclab\Desktop\Section3_SimulatedData\00_InfantNoiseRepository\';
noiseFilenameArrayStuct = dir(fullfile(noiseFolder, '*.erp'));
noiseFilenameArray = {noiseFilenameArrayStuct.name};
[tempERP noiseERPArray] = pop_loaderp( 'filename', noiseFilenameArray, 'filepath', noiseFolder );

M = 7 % Define number of workers for parfor loop. Set M = 1 if you do not have parallel computing toolbox set up

% Loop through each of the specified data samples (defined with the
% sampleStart and sampleN variables)
parfor (sample = sampleStart:(sampleStart-1+sampleN), M)
    % Set substream of each iteration for reproducible results
    stream = RandStream('CombRecursive', 'Seed', randSeed);
    RandStream.setGlobalStream(stream);
    stream.Substream = sample;
    
    % Call helper function with specified input arguments (see comments in
    % simulateOneSample_forDiffWave function for more information)
    simulateOneSample_forDiffWave(sample, subjectN, decayRate, saveFolder, leadField, sourceLocs, noiseERPArray);
end

toc % Used to keep track of simulation duration